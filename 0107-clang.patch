--- mythtv-0.27.5/mythtv/libs/libmythsoundtouch/cpu_detect_x86_gcc.cpp.orig 2015-12-16 20:45:04.634883975 +0000
+++ mythtv-0.27.5/mythtv/libs/libmythsoundtouch/cpu_detect_x86_gcc.cpp      2015-12-16 20:45:42.874702422 +0000
@@ -82,9 +82,9 @@
 /* ebx saving is necessary for PIC. gcc seems unable to see it alone */
 #define cpuid(index,eax,ebx,ecx,edx)\
     __asm __volatile\
-        ("mov %%"REG_b", %%"REG_S"\n\t"\
+        ("mov %%" REG_b", %%" REG_S"\n\t"\
          "cpuid\n\t"\
-         "xchg %%"REG_b", %%"REG_S\
+         "xchg %%" REG_b", %%" REG_S\
          : "=a" (eax), "=S" (ebx),\
            "=c" (ecx), "=d" (edx)\
          : "0" (index));
--- ./mythtv/external/FFmpeg/libavutil/timer.h.orig     2015-12-16 22:05:54.102492968 +0000
+++ ./mythtv/external/FFmpeg/libavutil/timer.h  2015-12-16 22:06:01.437282112 +0000
@@ -66,7 +66,7 @@
             tskip_count++;                                                \
         if (((tcount + tskip_count) & (tcount + tskip_count - 1)) == 0) { \
             av_log(NULL, AV_LOG_ERROR,                                    \
-                   "%"PRIu64" decicycles in %s, %d runs, %d skips\n",     \
+                   "%" PRIu64" decicycles in %s, %d runs, %d skips\n",     \
                    tsum * 10 / tcount, id, tcount, tskip_count);          \
         }                                                                 \
     }
--- ./mythtv/libs/libmythtv/AirPlay/mythairplayserver.cpp.orig  2015-12-16 22:22:47.414700477 +0000
+++ ./mythtv/libs/libmythtv/AirPlay/mythairplayserver.cpp       2015-12-16 22:22:54.053633675 +0000
@@ -49,7 +49,7 @@
 "<key>protovers</key>\r\n"\
 "<string>1.0</string>\r\n"\
 "<key>srcvers</key>\r\n"\
-"<string>"AIRPLAY_SERVER_VERSION_STR"</string>\r\n"\
+"<string>" AIRPLAY_SERVER_VERSION_STR"</string>\r\n"\
 "</dict>\r\n"\
 "</plist>\r\n")
 
--- ./mythtv/libs/libmythtv/videoout_vdpau.cpp.orig     2015-12-16 22:20:03.480441557 +0000
+++ ./mythtv/libs/libmythtv/videoout_vdpau.cpp  2015-12-16 22:21:15.959648697 +0000
@@ -477,9 +477,9 @@
                             NUM_REFERENCE_FRAMES];
 
         uint32_t pitches[3] = {
-            frame->pitches[0],
-            frame->pitches[2],
-            frame->pitches[1]
+            (uint32_t)frame->pitches[0],
+            (uint32_t)frame->pitches[2],
+            (uint32_t)frame->pitches[1]
         };
         void* const planes[3] = {
             frame->buf,
@@ -860,9 +860,9 @@
         if (codec_is_std(video_codec_id))
         {
             m_pause_surface = m_video_surfaces[0];
-            uint32_t pitches[3] = { frame->pitches[0],
-                                    frame->pitches[2],
-                                    frame->pitches[1] };
+            uint32_t pitches[3] = { (uint32_t)frame->pitches[0],
+                                    (uint32_t)frame->pitches[2],
+                                    (uint32_t)frame->pitches[1] };
             void* const planes[3] = { frame->buf,
                                       frame->buf + frame->offsets[2],
                                       frame->buf + frame->offsets[1] };
@@ -1172,9 +1172,9 @@
                                      kVDPBlendNull);
 
             uint32_t pitches[] = {
-                pipimage->pitches[0],
-                pipimage->pitches[2],
-                pipimage->pitches[1] };
+                (uint32_t)pipimage->pitches[0],
+                (uint32_t)pipimage->pitches[2],
+                (uint32_t)pipimage->pitches[1] };
             void* const planes[] = {
                 pipimage->buf,
                 pipimage->buf + pipimage->offsets[2],
--- ./mythtv/libs/libmythtv/videoout_nullvdpau.cpp.orig 2015-12-16 22:21:36.942426304 +0000
+++ ./mythtv/libs/libmythtv/videoout_nullvdpau.cpp      2015-12-16 22:21:49.798291524 +0000
@@ -507,9 +507,9 @@
                 {
                     VideoFrame *vf = m_shadowBuffers->At(i);
                     uint32_t pitches[] = {
-                        vf->pitches[0],
-                        vf->pitches[2],
-                        vf->pitches[1] };
+                        (uint32_t)vf->pitches[0],
+                        (uint32_t)vf->pitches[2],
+                        (uint32_t)vf->pitches[1] };
                     void* const planes[] = {
                         vf->buf,
                         vf->buf + vf->offsets[2],
--- ./mythtv/libs/libmythtv/decoderbase.cpp.orig        2015-12-16 22:10:58.055340336 +0000
+++ ./mythtv/libs/libmythtv/decoderbase.cpp     2015-12-16 22:11:47.454423541 +0000
@@ -203,7 +203,7 @@
     for (frm_pos_map_t::const_iterator it = posMap.begin();
          it != posMap.end(); ++it)
     {
-        PosMapEntry e = {it.key(), it.key() * keyframedist, *it};
+        PosMapEntry e = {(long long)it.key(), (long long)it.key() * keyframedist, (long long)*it};
         m_positionMap.push_back(e);
     }
 
@@ -273,7 +273,7 @@
         if (it.key() <= last_index)
             continue;
 
-        PosMapEntry e = {it.key(), it.key() * keyframedist, *it};
+        PosMapEntry e = {(long long)it.key(), (long long)it.key() * keyframedist, (long long)*it};
         m_positionMap.push_back(e);
     }

--- ./mythplugins/mythzoneminder/mythzmserver/zmserver.cpp.orig 2015-12-17 23:37:23.984853197 +0000
+++ ./mythplugins/mythzoneminder/mythzmserver/zmserver.cpp      2015-12-17 23:37:39.832386581 +0000
@@ -272,7 +272,7 @@
         if (shm_ptr == MAP_FAILED)
         {
             cout << "Failed to map shared memory from file ["
-                 << mmap_filename << "] " << "for monitor: "
+                 << mmap_filename.str() << "] " << "for monitor: "
                  << mon_id << endl;
             status = "Error";
 
@@ -291,7 +291,7 @@
         // using the legacy shared memory support
         if (debug)
         {
-            cout << "Failed to open mmap file [" << mmap_filename << "] "
+            cout << "Failed to open mmap file [" << mmap_filename.str() << "] "
                  << "for monitor: " << mon_id
                  << " : " << strerror(errno) << endl;
             cout << "Falling back to the legacy shared memory method" << endl;

